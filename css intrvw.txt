1. What is the Box model in CSS? Which CSS properties are a part of it?
A rectangle box is wrapped around every HTML element. The box model is used to determine the height and width of the rectangular box. The CSS Box consists of Width and height (or in the absence of that, default values and the content inside), padding, borders, margin.

Content:  Actual Content of the box where the text or image is placed.
Padding: Area surrounding the content (Space between the border and content).
Border: Area surrounding the padding.
Margin: Area surrounding the border.

2. What are the advantages of using CSS?
The main advantages of CSS are given below:

Separation of content from presentation - CSS provides a way to present the same content in multiple presentation formats in mobile or desktop or laptop.
Easy to maintain - CSS, built effectively can be used to change the look and feel complete by making small changes. To make a global change, simply change the style, and all elements in all the web pages will be updated automatically.
Bandwidth - Used effectively, the style sheets will be stored in the browser cache and they can be used on multiple pages, without having to download again.

3. What are the limitations of CSS?
Disadvantages of CSS are given below:

Browser Compatibility: Some style selectors are supported and some are not. We have to determine which style is supported or not using the @support selector).
Cross Browser issue: Some selectors behave differently in a different browser).
There is no parent selector: Currently, Using CSS, you can’t select a parent tag.
You can download a PDF version of Css Interview Questions.

Download PDF

4. How to include CSS in the webpage?
There are different ways to include a CSS in a webpage, 

1 - External Style Sheet: An external file linked to your HTML document: Using link tag, we can link the style sheet to the HTML page.

<link rel="stylesheet" type="text/css" href="mystyles.css" />
2 - Embed CSS with a style tag: A set of CSS styles included within your HTML page.

<style type="text/css">

/*Add style rules here*/

</style>
Add your CSS rules between the opening and closing style tags and write your CSS exactly the same way as you do in stand-alone stylesheet files.

3 - Add inline styles to HTML elements(CSS rules applied directly within an HTML tag.): Style can be added directly to the HTML element using a style tag.

<h2 style="color:red;background:black">Inline Style</h2>
4 - Import a stylesheet file (An external file imported into another CSS file): Another way to add CSS is by using the @import rule. This is to add a new CSS file within CSS itself.

@import "path/to/style.css";


5. What are the different types of Selectors in CSS?
A CSS selector is the part of a CSS ruleset that actually selects the content you want to style. Different types of selectors are listed below.

Universal Selector: The universal selector works like a wildcard character, selecting all elements on a page. In the given example, the provided styles will get applied to all the elements on the page.

* {
  color: "green";
  font-size: 20px;
  line-height: 25px;
}
Element Type Selector: This selector matches one or more HTML elements of the same name. In the given example, the provided styles will get applied to all the ul elements on the page.

ul {
  line-style: none;
  border: solid 1px #ccc;
}
ID Selector: This selector matches any HTML element that has an ID attribute with the same value as that of the selector. In the given example, the provided styles will get applied to all the elements having ID as a container on the page.

#container {
  width: 960px;
  margin: 0 auto;
}

<div id="container"></div>
Class Selector: The class selector also matches all elements on the page that have their class attribute set to the same value as the class.  In the given example, the provided styles will get applied to all the elements having ID as the box on the page.

.box {
  padding: 10px;
  margin: 10px;
  width: 240px;
}

<div class="box"></div>
Descendant Combinator: The descendant selector or, more accurately, the descendant combinator lets you combine two or more selectors so you can be more specific in your selection method.

#container .box {
	float: left;
	padding-bottom: 15px;
} 

<div id="container">
	<div class="box"></div>
	
	<div class="box-2"></div>
</div>

<div class=”box”></div>
This declaration block will apply to all elements that have a class of box that is inside an element with an ID of the container. It’s worth noting that the .box element doesn’t have to be an immediate child: there could be another element wrapping .box, and the styles would still apply.

Child Combinator: A selector that uses the child combinator is similar to a selector that uses a descendant combinator, except it only targets immediate child elements.

#container> .box {
	float: left;
	padding-bottom: 15px;
}

<div id="container">
	<div class="box"></div>
	
	<div>
		<div class="box"></div>
	</div>
</div>
The selector will match all elements that have a class of box and that are immediate children of the #container element. That means, unlike the descendant combinator, there can’t be another element wrapping .box it has to be a direct child element.

General Sibling Combinator: A selector that uses a general sibling combinator to match elements based on sibling relationships. The selected elements are beside each other in the HTML.

h2 ~ p {
	margin-bottom: 20px;
}

<h2>Title</h2>
<p>Paragraph example.</p>
<p>Paragraph example.</p>
<p>Paragraph example.</p>
<div class=”box”>
	<p>Paragraph example.</p>
</div>
In this example, all paragraph elements (<p>) will be styled with the specified rules, but only if they are siblings of <h2> elements. There could be other elements in between the <h2> and <p>, and the styles would still apply.

Adjacent Sibling Combinator: A selector that uses the adjacent sibling combinator uses the plus symbol (+), and is almost the same as the general sibling selector. The difference is that the targeted element must be an immediate sibling, not just a general sibling.

p + p {
	text-indent: 1.Sem;
	margin-bottom: 0;
}

<h2>Title</h2>
<p>Paragraph example.</p>
<p>Paragraph example.</p>
<p>Paragraph example.</p>

<div class=”box”>
	<p>Paragraph example.</p>
	<p>Paragraph example.</p>
</div>
The above example will apply the specified styles only to paragraph elements that immediately follow other paragraph elements. This means the first paragraph element on a page would not receive these styles. Also, if another element appeared between two paragraphs, the second paragraph of the two wouldn’t have the styles applied.

Attribute Selector: The attribute selector targets elements based on the presence and/or value of HTML attributes, and is declared using square brackets.

input [type=”text”] {
	background-color: #444;
	width: 200px;
}

<input type="text">

6. What is a CSS Preprocessor? What are Sass, Less, and Stylus? Why do people use them?
A CSS Preprocessor is a tool used to extend the basic functionality of default vanilla CSS through its own scripting language. It helps us to use complex logical syntax like – variables, functions, mixins, code nesting, and inheritance to name a few, supercharging your vanilla CSS.

SASS: Sass is the acronym for “Syntactically Awesome Style Sheets”. SASS can be written in two different syntaxes using SASS or SCSS

SASS vs SCSS

SASS is based on indentation and SCSS(Sassy CSS) is not.
SASS uses .sass extension while SCSS uses .scss extension.
SASS doesn’t use curly brackets or semicolons. SCSS uses it, just like the CSS.
SASS Syntax

$font-color: #fff 
$bg-color: #00f

#box
	color: $font-color
	background: $bg-color
SCSS Syntax

$font-color: #fff;
$bg-color: #00f;

#box{
	color: $font-color;
	background: $bg-color;
}
LESS: LESS is an acronym for “Leaner Stylesheets”. LESS is easy to add to any javascript projects by using NPM or less.js file. It uses the extension .less.

LESS syntax is the same as the SCSS with some exceptions. LESS uses @ to define the variables.

@font-color: #fff;
@bg-color: #00f

#box{
	color: @font-color;
	background: @bg-color;
}
Stylus: Stylus offers a great deal of flexibility in writing syntax, supports native CSS as well as allows omission of brackets, colons, and semicolons. It doesn’t use @ or $ for defining variables.

/* STYLUS SYNTAX WRITTEN LIKE NATIVE CSS */
font-color= #fff;
bg-color = #00f;

#box {
	color: font-color;
	background: bg-color;
}

/* OR */

/* STYLUS SYNTAX WITHOUT CURLY BRACES */
font-color= #fff;
bg-color = #00f;

#box
	color: font-color;
	background: bg-color;
7. What is VH/VW (viewport height/ viewport width) in CSS?
It’s a CSS unit used to measure the height and width in percentage with respect to the viewport. It is used mainly in responsive design techniques. The measure VH is equal to 1/100 of the height of the viewport. If the height of the browser is 1000px, 1vh is equal to 10px. Similarly, if the width is 1000px, then 1 vw is equal to 10px.

8. Difference between reset vs normalize CSS?. How do they differ?
Reset CSS: CSS resets aim to remove all built-in browser styling. For example margins, paddings, font-sizes of all elements are reset to be the same. 

Normalize CSS: Normalize CSS aims to make built-in browser styling consistent across browsers. It also corrects bugs for common browser dependencies.

9. What is the difference between inline, inline-block, and block?
Block Element: The block elements always start on a new line. They will also take space for an entire row or width. List of block elements are <div>, <p>.

Inline Elements: Inline elements don't start on a new line, they appear on the same line as the content and tags beside them. Some examples of inline elements are <a>, <span> , <strong>, and <img> tags. 

Inline Block Elements: Inline-block elements are similar to inline elements, except they can have padding and margins and set height and width values.

10. Is it important to test the webpage in different browsers?
It’s most important to test a website in different browsers when you’re first designing it, or when making major changes. However, it’s also important to repeat these tests periodically, since browsers go through a lot of updates and changes.

11. What are Pseudo elements and Pseudo classes?
Pseudo-elements allows us to create items that do not normally exist in the document tree, for example ::after.

::before
::after
::first-letter
::first-line
::selection
In the below example, the color will appear only on the first line of the paragraph.

p: :first-line {
	color: #ffOOOO;
	font-variant: small-caps;
}
Pseudo-classes select regular elements but under certain conditions like when the user is hovering over the link.

:link
:visited
:hover
:active
:focus
Example of the pseudo-class, In the below example, the color applies to the anchor tag when it’s hovered.

/* mouse over link */
a:hover {
	color: #FFOOFF;
}
12. How do you specify units in the CSS?. What are the different ways to do it?
There are different ways to specify units in CSS like px, em, pt, percentage (%). px(Pixel) gives fine-grained control and maintains alignment because 1 px or multiple of 1 px is guaranteed to look sharp. px is not cascade. em maintains relative size. you can have responsive fonts. Em, will cascade 1em is equal to the current font-size of the element or the browser default. If u sent font-size to 16px then 1em = 16px. The common practice is to set default body font-size to 62.5% (equal to 10px).

pt(point) are traditionally used in print. 1pt = 1/72 inch and it is a fixed-size unit.

%(percentage) sets font-size relative to the font size of the body. Hence, you have to set the font-size of the body to a reasonable size.

13. Does margin-top or margin-bottom have an effect on inline elements?
No, it doesn’t affect the inline elements. Inline elements flow with the contents of the page.

14. What property is used for changing the font face?
We can use the font-family property for achieving this. The font-family property is used for specifying what font needs to be applied on the targetted DOM element. It can hold several font names as part of “fallback” mechanism in case the browser does not support the fonts. For example, we can use:

 p {
  font-family: "Times New Roman", Times, serif;
}
In the above piece of code, we are applying font-family property to the paragraph element.

It tells the browser to look for “Times New Roman” font and apply it.
If the “Times New Roman” font is not installed or supported, then it asks the browser to use Times font.
If both “Times New Roman” and Times are not supported, then it asks the browser to use any supported generic font belonging to serif.
If you do not want the font-face of the paragraph element to be Times New Roman/Times/serif font, and you want to use the Arial/Helvetica/sans-serif font, then we can just update the CSS property of paragraph element as:

 p {
  font-family: Arial, Helvetica, sans-serif;
}
15. What are the differences between adaptive design and responsive design?
Adaptive Design	Responsive Design
Adaptive design focuses on developing websites based on multiple fixed layout sizes.	Responsive design focuses on showing content on the basis of available browser space.
When a website developed using adaptive design is opened on the desktop browser, first the available space is detected and then the layout with most appropriate sizes are picked and used for the display of contents. Resizing of browser window has no affect on the design.	When a website developed using responsive design is opened on a desktop browser and when we try to resize the browser window, the content of the website is dynamically and optimally rearranged to accomodate the window.
Usually, adaptive designs use six standard screen widths - 320 px, 480 px, 760 px, 960 px, 1200 px, 1600 px. These sizes are detected and appropriate layouts are loaded.	This design makes use of CSS media queries for changing styles depending on the target devices properties for adapting to different screens.
It takes a lot of time and effort to first examine the options and realities of the end users and then design best possible adaptive solutions them.	Generally, Responsive design takes much less work to build and design fluid websites that can accomodate content from screen depending on the screen size.
Gives a lot of control over the design to develop sites for specific screens.	No much control over the design is offered here.
16. How are the CSS selectors matched against the elements by the browser?
The order of matching selectors goes from right to left of the selector expression. The elements in the DOM are filtered by browsers based on the key selectors and are then traversed up to the parent elements for determining the matches. The speed of determining the elements depends on the length of the chain of selectors. Consider an example:

 p span{ 
    color: black;
}

Here, the browser first finds all span elements in the DOM and then it traverses to each of its parent elements to check if they are the paragraph p elements.

Once the browser finds all matching span tags having paragraph elements as parent and applies the color of black to the content, the matching process is stopped.

17. How is border-box different from content-box?
content-box is the default value box-sizing property. The height and the width properties consist only of the content by excluding the border and padding. Consider an example as shown:

div{
    width:300px;
    height:200px;
    padding:15px;
    border: 5px solid grey;
    margin:30px;
    -moz-box-sizing:content-box;
    -webkit-box-sizing:content-box;
    box-sizing:content-box;
}
Here, the box-sizing for the div element is given as content-box. That means, the height and width considered for the div content exclude the padding and border. We will get full height and width parameters specified for the content as shown in the below image.


The border-box property includes the content, padding and border in the height and width properties. Consider an example as shown:

div{
    width:300px;
    height:200px;
    padding:15px;
    border: 5px solid grey;
    margin:30px;
    -moz-box-sizing:border-box;
    -webkit-box-sizing:border-box;
    box-sizing:border-box;
}
Here, the box-sizing for the div element is given as border-box. That means the height and width considered for the div content will also include the padding and border. This means that the actual height of the div content will be:

actual height = height - 
                padding on top and bottom - 
                border on top and bottom
              = 200 - (15*2) - (5*2) 
              = 160 px
and the actual width of the div content would be:

actual width  = width - 
                padding on right and left - 
                border on right and left
              = 300 - (15*2) - (5*2) 
              = 260 px
This is represented in the image below:


18. How is opacity specified in CSS3?
Opacity refers to the degree to which the content is transparent or opaque. We can use the property named opacity which takes the values ranging from 0 to 1. 0 specifies that the element is completely transparent where 1 means that the element is completely opaque. We can use the opacity property as follows:

 div { 
    opacity: 0.6;
}
In the above example, an opacity of 60% is applied to the div section. The opacity property is not supported by the internet explorer browser. To make it work there, we need to use filter property as polyfill as shown in the example below.

 div { 
    opacity: 0.6;
    filter: alpha(opacity=60);
}

19. Why should we use float property in CSS?
The float property is used for positioning the HTML elements horizontally either towards the left or right of the container. For instance,

 float-demo {
     float: right; 
}
Here, the element to which the class is applied ensures that the element is positioned on the right of the container. If you specify the value of float as left, then the element will be placed on the left side of the container.

20. What is a z-index, how does it function?
z-index is used for specifying the vertical stacking of the overlapping elements that occur at the time of its positioning. It specifies the vertical stack order of the elements positioned that helps to define how the display of elements should happen in cases of overlapping.

The default value of this property is 0 and can be either positive or negative. Apart from 0, the values of the z-index can be:

Auto: The stack order will be set equal to the parent.
Number: The number can be positive or negative. It defines the stack order.
Initial: The default value of 0 is set to the property.
Inherit: The properties are inherited from the parent.
The elements having a lesser value of z-index is stacked lower than the ones with a higher z-index.


From the above figure, we can see that as the value of the z-index increases along the z-axis, the order of stacking would be towards the top of other elements along the vertical axis.

21. What do the following CSS selectors mean?
div, p
div p
div ~ p
div + p
div > p
The meaning of the given list of selectors goes as follows:

div, p: This selector implies selecting all div elements and all p elements.
Consider an example below:

 <h1>Heading 1</h1>
   <div>
       Division 1
       <p> paragraph 1</p> <!-- Will be selected -->
   </div>
   <p> paragraph 2</p> 
   <p> paragraph 3</p> 
   <div>
       Division 2
   </div>
   <span> Span 1 </span>
Here, all the div elements and the p elements would be selected by the browser irrespective of their parents or where they are placed. The remaining tags like h1 and span are ignored.

div p : This selector tells to select all p elements that are inside div elements. Consider an example below:
  <h1>Heading 1</h1>
<div>
    Division 1
    <p> paragraph 1</p> <!-- Will be selected -->
    <div>
        <p> Inner Div Paragraph </p> <!-- Will be selected -->
    </div>
</div>
<p> paragraph 2</p>
<p> paragraph 3</p>
<div>
    Division 2
</div>
<span> Span 1 </span>
Here, <p> paragraph 1</p> and <p> Inner Div Paragraph </p> would be selected by the browser and the properties are applied. The rest of the paragraph tags are not selected.

div ~ p : This selector tells to select all p elements that have div elements preceeded anywhere. Consider an example,
<h1>Heading 1</h1>
<div>
   Division 1
   <p> paragraph 1</p>
</div>
<p> paragraph 2</p> <!-- Will be selected -->
<p> paragraph 3</p> <!-- Will be selected -->
<div>
   Division 2
</div>
<span> Span 1 </span>
Here, paragraph 2 and paragraph 3 elements would be selected as marked in the code above.

div + p : This selector says to select all p elements placed immediately after the div element. Consider an example in this case:
    <h1>Heading 1</h1>
   <div>
       Division 1
       <p> paragraph 1</p>
   </div>
   <p> paragraph 2</p> <!-- Will be selected -->
   <p> paragraph 3</p> 
   <div>
       Division 2
   </div>
   <span> Span 1 </span>
In this case, we have paragraph 2 element immediately after the div tag. Hence, only that element will be selected.

div > p : This selector says to select all p elements which has div as an immediate parent. In the same example below:
    <h1>Heading 1</h1>
   <div>
       Division 1
       <p> paragraph 1</p> <!-- Will be selected -->
   </div>
   <p> paragraph 2</p> 
   <p> paragraph 3</p> 
   <div>
       Division 2
   </div>
   <span> Span 1 </span>
Only <p> paragraph 1</p> will be selected in this case because it has immediate div as the parent.

22. What are the properties of flexbox?
Flexbox stands for flexible box and it was introduced around 2017 in CSS with the purpose of providing an efficient way to handle layouts, align elements within them and distribute spaces amongst the items in dynamic/responsive conditions. It provides an enhanced ability to alter the dimensions of the items and make use of the available space in the container efficiently. In order to achieve this, CSS3 provides some properties.

The properties of flexbox are as follows:

flex-direction: This property helps in defining the direction the container should stack the items targetted for flex. The values of this property can be
row: Stacks items horizontally from left to right in the flex container.
column: Stacks items vertically from top to bottom in the flex container.
row-reverse: Stacks items horizontally from right to left in the flex container.
column-reverse: Stacks items vertically from bottom to top in the flex container.
flex-wrap: This property specifies of the flex items should be wrapped or not. Possible values are:
wrap: The flex items would be wrapped if needed.
nowrap: This is the default value that says the items won’t be wrapped.
wrap-reverse: This specifies that the items will be wrapped if needed but in reverse order.
flex-flow: This property is used for setting both flex-direction and flex-wrap properties in one statement.
justify-content: Used for aligning the flex items. Possible values are:
center: It means that all the flex items are present at the center of the container.
flex-start: This value states that the items are aligned at the start of the container. This is the default value.
flex-end: This value ensures the items are aligned at the end of the container.
space-around: This value displays the items having space between, before, around the items.
space-between: This value displays items with spaces between the lines.
align-items: This is used for aligning flex items.
align-content: This is used for aligning the flex lines.
23. What is cascading in CSS?
“Cascading” refers to the process of going through the style declarations and defining weight or importance to the styling rules that help the browser to select what rules have to be applied in times of conflict. The conflict here refers to multiple rules that are applicable to a particular HTML element. In such cases, we need to let the browser know what style needs to be applied to the element. This is done by cascading down the list of style declarations elements.

For example, if we have the below style:

p{
    color:white;
}
and we also have the following declaration below it or in another stylesheet that has been linked to the page:

p{
    color: black;
}
We have a conflict in color property here for the paragraph elements. Here, the browser just cascades down to identify what is the most recent and most specific style and applies that. Since we have the color:black; as the most specific declaration, the color black is applied to the paragraph elements. Now if you want to ensure color white is applied to the paragraph, we can define weight to that style by adding !important as shown below:

p{
    color:white !important;
}
!important ensures that the property has the maximum weight in presence of other conflicting properties.

CSS Interview Questions for Experienced
24. Explain CSS position property?
Absolute: To place an element exactly where you want to place it. absolute position is actually set relative to the element's parent. if no parent is available then the relative place to the page itself (it will default all the way back up to the element).
Relative: "Relative to itself". Setting position: relative; on an element and no other positioning attributes, it will no effect on its positioning. It allows the use of z-index on the element and it limits the scope of absolutely positioned child elements. Any child element will be absolutely positioned within that block. 
Fixed: The element is positioned relative to the viewport or the browser window itself. viewport doesn't change if you scroll and hence the fixed element will stay right in the same position. 
Static: Static default for every single page element. The only reason you would ever set an element to position: static is to forcefully remove some positioning that got applied to an element outside of your control.
Sticky: Sticky positioning is a hybrid of relative and fixed positioning. The element is treated as relative positioned until it crosses a specified threshold, at which point it is treated as fixed positioned.

 
25. When does DOM reflow occur?
Reflow is the name of the web browser process for re-calculating the positions and geometries of elements in the document, for the purpose of re-rendering part or all of the document. 

Reflow occurs when:

Insert, remove or update an element in the DOM.
Modify content on the page, e.g. the text in an input box.
Move a DOM element.
Animate a DOM element.
Take measurements of an element such as offsetHeight or getComputedStyle.
Change a CSS style.
26. Different Box Sizing Property?
The box-sizing CSS property sets how the total width and height of an element are calculated.

Content-box: The default width and height values apply to the element's content only. The padding and border are added to the outside of the box.
Padding-box: Width and height values apply to the element's content and its padding. The border is added to the outside of the box. Currently, only Firefox supports the padding-box value.
Border-box: Width and height values apply to the content, padding, and border.
27. How to center align a div inside another div?
Centering with Table:
HTML:

<div class=”cn”><div class=”inner”>your content</div></div>
CSS:

.cn {
	display: table-cell;
	width: 500px;
	height: 500px;
	vertical-align: middle;
	text-align: center;
}

.inner {
	display: inline-block;
	width: 200px; height: 200px;
}
Centering with Transform
HTML:

<div class="cn"><div class="inner">your content</div></div>
CSS:

.cn {
	position: relative;
	width: 500px;
	height: 500px;
}

.inner {
	position: absolute;
	top: 50%; left: 50%;
	transform: translate(-50%,-50%);
	width: 200px;
	height: 200px;
}
Centering with Flexbox
HTML:

<div class="cn"><div class="inner">your content</div></div>
CSS:

.cn {
	display: flex;
	justify-content: center;
	align-items: center;
}
Centering with Grid
HTML:

<div class=”wrap_grid”>
	<div id=”container”>vertical aligned text<br />some more text here
	</div>
</div>
CSS:

.wrap-grid {
	display: grid;
	place-content: center;
}
28. Can you name the four types of @media properties?
The four types of @media properties are:

All → It’s the default property. Used for all media-type devices.
Screen → Used for computer screen, mobile screen.
Print → Used for printers.
Speech → Used for screen readers.
29. What is the grid system?
CSS Grid Layout is the most powerful layout system available in CSS. It is said to be a 2-dimensional system, meaning it can handle both columns and rows, unlike flexbox which is largely a 1-dimensional system.

30. What are the different ways to hide the element using CSS?
Using display property(display: none). It’s not available for screen readers. The element will not exist in the DOM if display: none is used.
Using visibility property(visibility: hidden), will take up the space of the element. It will be available to screen reader users. The element will actually be present in the DOM, but not shown on the screen.
Using position property (position: absolute). Make it available outside the screen.
31. What does the :root pseudo-class refer to?
The :root selector allows you to target the highest-level “parent” element in the DOM, or document tree. It is defined in the CSS Selectors Level 3 specification.

32. What does Accessibility (a11y) mean?
Accessibility refers to how software or hardware combinations are designed to make a system accessible to persons with disabilities, such as visual impairment, hearing loss, or limited dexterity.

For example, a website developed with accessibility in mind might have text-to-speech capabilities. In the USA public websites have to have accessible compliance. It’s defined in 508 compliance. It gives the guidelines and best practices for all website users that should be met with key areas of accessibility.

33. How do I restore the default value of a property?
The keyword initial can be used to reset it to its default value.

34. Difference between CSS grid vs flexbox?
CSS Grid Layout is a two-dimensional system, meaning it can handle both columns and rows. Grid layout is intended for larger-scale layouts which aren’t linear in design.
Flexbox is largely a one-dimensional system (either in a column or a row). Flexbox layout is most appropriate to the components of an application.
35. How does Calc work?
The CSS3 calc() function allows us to perform mathematical operations on property values. Instead of declaring, for example, static pixel values for an element's width, we can use calc() to specify that the width is the result of the addition of two or more numeric values.

.foo {
	Width: calc(100px + 50px)
}
36. What do CSS Custom properties variables mean?
Custom properties (sometimes referred to as CSS variables or cascading variables) are defined by users that contain specific values to be reused throughout a document. The value is set using -- notion. And the values are accessed using the var() function.

:root {
	--main-bg-color: brown
}

.one {
	color: white;
	background-color· var (--main-bg-color);
	margin: l0px,
	width: 50px,
	height: 5Opx;
	display: inline-block;
}
37. What is the difference between CSS variables and preprocessor(SASS, LESS, Stylus) variables?
CSS variables can be used without the need for a preprocessor. Currently, all the major browsers support the CSS variables. 
CSS variable cascade. But the preprocessor variables don’t cascade. 
CSS variable can be accessed and manipulated in javascript.
38. What does * { box-sizing: border-box; } do? What are its advantages?
It makes every element in the document include the padding and border in the element’s inner dimension for the height and width computation.  
In box-sizing: border-box, The height of an element is now calculated by the content's height + vertical padding + vertical border width.
The width of an element is now calculated by the content's width + horizontal padding + horizontal border width.
39. What does !important mean in CSS?
The style is having the important will have the highest precedence and it overrides the cascaded property.

 p {
 	color: red !important;
 }
 #thing {
 	color: green;
 } 
 <p id="thing">Will be RED.</p>
40. What is specificity? How to calculate specificity?
A process of determining which CSS rule will be applied to an element. It actually determines which rules will take precedence. Inline style usually wins then ID then the class value (or pseudo-class or attribute selector), the universal selector (*) has no specificity. ID selectors have a higher specificity than attribute selectors.

41. What is progressive rendering? How do you implement progressive rendering in the website?. What are the advantages of it?
Progressive rendering is the name given to techniques used to improve the performance of a webpage (in particular, improve perceived load time) to render content for display as quickly as possible.

We can implement the progressive rendering of the page by loading the lazy loading of the images.  We can use Intersection Observer API to lazy load the image. The API makes it simple to detect when an element enters the viewport and take an action when it does. Once the image enters the viewport, we will start loading the images.

A sample snippet is given below.

<img class="lazy"
src="placeholder-image.jpg"
data-src="image-to-lazy-load-1x.jpg"
data-srcset="image-to-lazy-load-2x.jpg 2x, image-to-lazy-load-1x.jpg 1x"
alt="I'm an image!">

document.addEventListener("DOMContentLoaded", function() {
  var lazyImages = [].slice.call(document.querySelectorAll("img.lazy"));

  if ("IntersectionObserver" in window) {
    let lazyImageObserver = new IntersectionObserver(function(entries, observer) {
      entries.forEach(function(entry) {
        if (entry.isIntersecting) {
          let lazyImage = entry.target;
          lazyImage.src = lazyImage.dataset.src;
          lazyImage.srcset = lazyImage.dataset.srcset;
          lazyImage.classList.remove("lazy");
          lazyImageObserver.unobserve(lazyImage);
        }
      });
    });

    lazyImages.forEach(function(lazyImage) {
      lazyImageObserver.observe(lazyImage);
    });
  } else {
    // Possibly fall back to event handlers here
  }
});
42. What are the advantages of using translate() instead of absolute position?
Translate() does not cause the browser to trigger repaint and layout and instead only acts on the compositor. The absolute position triggers the repaint or DOM reflow. So, translate() gives better performance.

43. Does style1.css have to be downloaded and parsed before style2.css can be fetched?
<head>
	<link h ref=" stylel. css" rel=" stylesheet">
	<link href="style2.css" rel="stylesheet">
</head>
No, the browsers will download the CSS in the order of its appearance on the HTML page.

44. How to determine if the browser supports a certain feature?
The @support in CSS can be very useful to scan if the current browser has support for a certain feature.

@supports (display: grid) {
	div {
		display: grid;
	}
}
45. How does the absolute positioning work?
Absolute positioning is a very powerful positioning mechanism that allows users to place any element wherever they want in an exact location. The CSS properties right, left, top, bottom and define the exact locations where you need to place the element. In absolute positioning, the following points need to be considered:

The element to which the absolute positioning is applied is removed from the normal workflow of the HTML document.
The HTML layout does not create any space for that element in its page layout.
The element is positioned relative to the closest positioned ancestor. If no such ancestor is present, then the element is placed relative to the initial container block.
The final position of the element is determined based on values provided to the top, right, left, bottom.
46. How does this property work overflow: hidden?
The overflow property in CSS is used for specifying whether the content has to be clipped or the scrollbars have to be added to the content area when the content size exceeds the specified container size where the content is enclosed. If the value of overflow is hidden, the content gets clipped post the size of the container thereby making the content invisible. For example,

div {
    width: 150px;
    height: 50px;
    overflow: hidden;
}
If the content of the div is very large and exceeds the height of 50px, the content gets clipped post 50px and the rest of the content is not made visible.

47. How will you align content inside the p tag at the exact center inside the div?
We can add the text-align: center property inside the parent div for aligning the contents horizontally. But it will not align the contents vertically. We can align the content vertically by making the parent element have relative positioning and the child element have absolute positioning. The child element should have the values of top, bottom, right, left as 0 to center it in the middle vertically. Then we need to set the margin as auto. It is assumed that both the child and mother elements will have height and width values.

Consider we have a div element of height and width taking 20% of the screen size, and we have a paragraph element taking the height of 1.2em and width of 20%. If we want to align the paragraph element at the center (vertically and horizontally), we write the following styles:

div {
    position : relative;  // Make position relative
    height : 20%;
    width : 20%;
    text-align : center; //Align to center horizontally
}
p {
    position : absolute; // Make position absolute
    top:0;                // Give values of top, bottom,left, right to 0
    bottom:0;
    left:0;
    right:0;
    margin : auto;        // Set margin as auto
    height : 1.2 em;
    width : 20%;
}
48. How is margin different from padding in CSS?
Margin property using which we can create space around the elements. We can also create space for borders defined at the exteriors. We have the following properties for defining the margin:

margin-top
margin-right
margin-bottom
margin-left
margin property by itself has the values as:
auto – The browser auto-calculates the margin while we use this.
length – The value of this property can be in px, pt, cm, em etc. The values can be positive or negative.
% – We can also give percentage value as margin to the element.
inherit – Using this property, the margin properties can be inherited from the parent elements.
The padding property is used for generating the space around the element’s content and inside any known border. The padding also has sub-properties like:

padding-top
padding-right
padding-bottom
padding-left
It is to be noted that the padding does not allow negative values.

From the below image, we can see that the Margin is the outermost entity of the CSS Box Model that lies outside of the borders whereas the padding lies within the borders.


49. What do you have to do to automatically number the heading values of sections and categories?
We can use the concept of CSS counters. This lets us adjust the appearance of the content based on the location in a document. While using this, we need to first initialize the value of the counter-reset property which is 0 by default. The same property is also used for changing the value to any number that we need. Post initialization, the counter’s value can be incremented or decremented by using the counter-increment property. The name of the counter cannot be CSS keywords like “none”, “initial”, “inherit” etc. If the CSS keywords are used, then the declaration would be ignored.

Consider an example as shown below:

body {
  counter-reset: header;   /* define counter named 'header' whose initial value is 0 by default */
}

h2::before {
  counter-increment: header;   /* The value of header counter by 1.*/
  content: "Header " counter(header) ": ";  /* To display word Header and the value of the counter with colon before it.*/
}
Here, we are trying to achieve auto count increment and display feature for the h2 tag. Wherever we use h2 tag, the content will be prefixed by "Header 1 : " , "Header 2 : ", "Header 3 : " etc.

50. How is the nth-child() different from nth of type selectors?
Both are pseudo-classes (Pseudo-classes are those keywords that specifies the special state of the selected element). The nth-child() pseudo-class is used for matching elements based on the number that represents the position of an element based on the siblings. The number is used to match an element on the basis of the element’s position amongst its siblings.

For example, in the below piece of code, if we give nth-child(4) for the example class, then the 4th child of the example class is selected irrespective of the element type. Here, the fourth child of the example class is the div element. The element is selected and a background of black is added to it.

.example:nth-child(4) {   
    background: black; 
}
<div class="example">
	<p>This is a paragraph.</p>
	<p>This is a paragraph.</p>
	<p>This is a paragraph.</p>
	<div>This is a div.</div> <!-- 4th Element to select and apply style-->
	<div>This is a div.</div> 
	<p>This is a paragraph.</p>
	<p>This is a paragraph.</p>
	<div>This is a div.</div>
</div>
The nth-of-type() pseudo-class is similar to the nth-child but it helps in matching the selector based on a number that represents the position of the element within the elements that are the siblings of its same type. The number can also be given as a function or give keywords like odd or even.

For example, in the below piece of code, if we give p:nth-of-type(even) for the example class, then all the even paragraph tags are selected within the example class and the style of background black is applied to them. The selected elements are marked in comments in the below code:

.example p:nth-of-type(even) { 
    background: black; 
}
<div class="example">
	<p>This is a paragraph.</p> 
	<p>This is a paragraph.</p> <!-- Select this and apply style-->
	<p>This is a paragraph.</p> 
	<div>This is a div.</div>
	<div>This is a div.</div> 
	<p>This is a paragraph.</p> <!-- Select this and apply style-->
	<p>This is a paragraph.</p> 
	<div>This is a div.</div>
	<p>This is a paragraph.</p> <!-- Select this and apply style-->
	<div>This is a div.</div>
</div>
51. What is the importance of CSS Sprites?
CSS sprites are used for combining multiple images in a single larger image. They are commonly used for representing icons that are used in the user interfaces. The main advantages of using sprites are:

It reduces the number of HTTP requests to get data of multiple images as they are acquired only by sending a single request.
It helps in downloading assets in advance that help display icons or images upon hover or other pseudo-states.
When there are multiple images, the browser makes separate calls to get the image for each of them. Using sprites, the images are combined in one and we can just call for that image using one call.
Consider an example where our application requires 3 images as shown below (Without Sprites Section). If we are trying to load the images independently, we require 3 different HTTP Requests to get the data. But if we have CSS Sprites where all 3 images are combines into 1 separated by some spaces, then we require only 1 HTTP Request.


We can access each image from the sprite by accessing the positioning properties as shown in the below code:

<!DOCTYPE html>
<html>
<head>
<style>
#home-icon {
  left: 0px;
  width: 46px;
  background: url('spriteFile.gif') 0 0;
}

#prev-icon {
  left: 63px;
  width: 43px;
  background: url('spriteFile.gif') -47px 0;
}

#next-icon {
  left: 129px;
  width: 43px;
  background: url('spriteFile.gif') -91px 0;
}
</style>
</head>
<body>

<img id="home-icon" src="spriteFile.gif" width="1" height="1">    <!-- To display home icon here -->
<img id="next-icon" src="spriteFile.gif" width="1" height="1">    <!-- To display next icon icon here -->
<img id="prev-icon" src="spriteFile.gif" width="1" height="1">    <!-- To display previous icon icon here -->

</body>
</html>
In the above code, we are trying to access each element - house, previous and next icon - from the sprite file by using the left, width properties. The image is displayed in the img section by means of the background property. Do note that the source of the image (src attribute of the img tag) is just one file which is the spriteFile.gif and depending on the rules specified in the id selectors, the images are loaded accordingly.

52. What do you understand by tweening in CSS?
Tweening is the process of filling the gaps between the key sequences, i.e between the keyframes that are already created. Keyframes are those frames that represent start and end point of animation action. Tweening involves generating intermediate keyframes between two images that give the impression that the first one has evolved smoothly to the second image. For this purpose, we use properties like transforms - matrix, translate, scale, rotate etc.

In the below example, we are generating intermediate frames of paragraph elements to slide through from the start to the right edge of the browser.

p {
  animation-duration: 2s;
  animation-name: slidethrough;
}

@keyframes slidethrough {
  from {
    margin-left: 100%;
    width: 300%; 
  }

  to {
    margin-left: 0%;
    width: 100%;
  }
}
Here, the paragraph element specifies that the animation process should take 2 seconds for execution from start to the finish. This is done by using the animation-duration property. The animation-name of the @keyframes is defined by using the property animation-name. The intermediate keyframes are defined by using @keyframes rule. In the example, we have just 2 keyframes. The first keyframe starts at 0% and runs till the left margin of 100% which is the rightmost edge of the containing element. The second keyframe starts at 100% where the left margin is set as 0% and the width to be set as 100% which results in finishing the animation flush against the left edge of the container area.

53. Why do we need to use clear property along with floats in CSS?
The clear property along with floats is used for specifying which side of floating elements is not supposed to float. An element having clear property ensures that the element does not move up adjacent to the float. But the element will be moved down past the float.

Let us understand this with the help of an example. We know that the floated objects do not add to the height of the objects where they reside. Consider we have a div element with class “floated_div” within another div element with id “main_div”.

<html>
    <head>
    <style>
        #main_div {
             width: 400px;
             margin: 10px auto;
             border: 4px solid #cccccc;
             padding: 5px;
        }

        .floated_div {
             float: left;
             width: 50px;
             height: 50px;
             border: 2px solid #990000;
             margin: 10px;
        }
    </style>
    </head>
    <body>
        <div id="main_div">
             <p>Clear Float Demo</p>
             <div class="floated_div"></div>
             <div class="floated_div"></div>
             <div class="floated_div"></div>
             <div class="floated_div"></div>
             <div class="floated_div"></div>
        </div>
    </body>
</html>
The result of this code would be as shown below. We see that the squares that are expected to be within dev are not within the main parent div. How do we fix this?


We can do it just by adding <div style="clear:both"></div> line at the end of the last floated element so that the floated elements are fit in properly within the main div container.

<html>
    <head>
    <style>
        #main_div {
             width: 400px;
             margin: 10px auto;
             border: 4px solid #cccccc;
             padding: 5px;
        }

        .floated_div {
             float: left;
             width: 50px;
             height: 50px;
             border: 2px solid #990000;
             margin: 10px;
        }
    </style>
    </head>
    <body>
        <div id="main_div">
             <p>Clear Float Demo</p>
            
             <div class="floated_div"></div>
             <div class="floated_div"></div>
             <div class="floated_div"></div>
             <div class="floated_div"></div>
             <div class="floated_div"></div>
             <div style="clear:both"></div>    <!-- Adding this fixed the issue -->
        </div>
    </body>
</html>
The result of this will be:


54. How will you fix browser-specific styling issues?
Different ways to fix browser-specific issues.

We can write browser-specific styles separately in different sheets and load that only when the specific browser is used. This makes use of the server-side rendering technique.
We can use auto-prefix for automatically adding vendor prefixes in the code.
We can also use normalize.css or reset CSS techniques.
There are some ways for avoiding browser compatibility issues too. They are as follows:

Validate HTML and CSS: We know that the code will be read, interpreted and handled differently by different browsers. We need to validate our HTML and CSS files for the missing closing tags, or missing semicolons in the syntaxes because there are chances that the old browsers will throw errors while rendering the code. We can avoid those errors by:
Maintaining well-aligned code that helps in easy readability.
Inserting comments at necessary places.
Make use of validation tools like Jigsaw CSS validator, W3C HTML Validators to identify syntax issues in the code.
Maintain Cross-Browser Compatibility in the Layouts: Cross-Browser compatibility is a must while developing web applications. We expect our application to be responsive across all devices, browsers and platforms. Some of the effects of layout incompatibilities are unresponsiveness of the layouts in mobile devices, the difference in layout rendering between modern and old browsers, etc. These incompatibilities can be avoided by using:
CSS Multi-Column layouts - For maintaining proper layouts w.r.t columns and containers.
HTML viewport metatag – For ensuring content is properly spanned across mobile devices.
CSS Flexbox and Grids - To layout child elements depending on the content and available space.
CSS resets stylesheets - For reducing browser inconsistencies in default line heights, font sizes, margins etc.
Check JavaScript Library issues: Ensure the libraries are used judiciously and the ones used are supported by the browsers.
Check DOCTYPE tag keyword: The DOCTYPE keyword is meant for defining rules of what needs to be used in the code. Older browser versions check for DOCTYPE tag at the beginning and if not found, the application rendering won't be proper.
Test on real devices: Although applications can be tested on virtual environments, it would be more beneficial if the testing is carried out on real devices and platforms. We can use tools like Testsigma for this purpose that enables us to test in real devices parallelly.
Conclusion
CSS plays the most important role in the field of web development. This is because CSS helps in achieving beautiful, responsive or adaptive websites depending on the business requirements. CSS helps in building lighter and flexible layouts that help in loading pages faster and making the content visually appealing. CSS is continuously evolving and is becoming more powerful thereby making it the most sought-after technology by various companies to develop websites. In this article, we have seen the most commonly asked interview questions in CSS, more particularly CSS3.

Useful Resources

CSS Guides
HTML
Coding Practice
JavaScript
SASS Vs SCSS
HTML/CSS Books
CSS Vs HTML
CSS MCQ
1.
Which CSS property allows you to hide an element but still maintain the space it occupies on the web page?


display:none;

visibility:hidden

display:hidden

none:hidden
2.
Which of the following is NOT a valid CSS length unit?


cm

em

dm

All the above
3.
What is the CSS selector which allows you to target every element in a web page?


*

: :root

>

<
4.
What would be the color of text “I am awesome” for the following rules?

<ul class="shopping-list" id="awesome"> 
<li><span>Milk</span></li> 
<li class="favorite" id=”must-buy”>
<span class=”highlight”>I am awesome</span>
</li>
 </ul>
<style>
ul#awesome {
color: red;
}
Ul.shopping-list li.favorite span {
color: blue;
}
</style>

Blue

Red

Green

Yellow
5.
Which of the following CSS properties DOES NOT influence the box model?


Outline

Padding

Content
6.
How will you select the anchor element whose href attribute starts with https?


a[href*="https"]

a[href^="https"]

a[href$="https"]

a[href~="https"]
7.
What CSS3 property is used for capitalizing the text or converting them to lowercase or uppercase?


text-transform

text-translate

text-convert

text-format
8.
In the following piece of code, does the stylesheet2.css sheet has to be loaded and parsed before the first p tag is loaded?

<head>
    <link href="stylesheet1.css" rel="stylesheet">
</head>
<body>
    <p>Paragraph 1</p>
    <p>Paragraph 2</p>
    <link href="stylesheet2.css" rel="stylesheet">
</body>

We cant write link tags inside the body.

No

Yes

Loads after the paragraph are loaded
9.
How would you select which anchor element will have href consisting of the substring “js”?


a[href*="js"]

a[href="*js"]

a[href="$js"]

a[href$="js"]
10.
What property should be used in case we need to display a nice blue border that is dotted in nature around an image?


border-dotted

border-line

border-decoration

border-style
11.
Which among the following options represent correct syntax for selecting all paragraph elements in a div element?


div < p

div + p

div p

div ~ p
12.
What CSS3 property is used for the set distance between borders of adjacent tables cells?


border-spacing

border-collapse

cell-spacing

cell-collapse
13.
Which of the below options are used for defining the difference between two lines of the content?


line-distance

line-height

line-gap

line-min
14.
Which among the below property is used for setting the blend mode of background layers in an element?


background-blend-mode

background-blend

blend-mode-background

blend-background
15.
Which among the below options are used for giving line over text?


text-transform: line-through

text-transform: overline

text-decoration: overline

text-decoration: line-through




1) What is CSS?
CSS stands for Cascading Style Sheet. It is a popular styling language which is used with HTML to design websites. It can also be used with any XML documents including plain XML, SVG, and XUL.More details...

2) What is the origin of CSS?
SGML (Standard Generalized Markup Language) is the origin of CSS. It is a language that defines markup languages.

3) What are the different variations of CSS?
Following are the different variations of CSS:
Play Video


CSS1
CSS2
CSS2.1
CSS3
CSS4
4) How can you integrate CSS on a web page?
There are three methods to integrate CSS on web pages.

Inline method - It is used to insert style sheets in HTML document
Embedded/Internal method - It is used to add a unique style to a single document
Linked/Imported/External method - It is used when you want to make changes on multiple pages.
More details...
5) What are the advantages of CSS?
Bandwidth
Site-wide consistency
Page reformatting
Accessibility
Content separated from presentation

6) What are the limitations of CSS?
Ascending by selectors is not possible
Limitations of vertical control
No expressions
No column declaration
Pseudo-class not controlled by dynamic behavior
Rules, styles, targeting specific text not possible
7) What are the CSS frameworks?
CSS frameworks are the preplanned libraries which make easy and more standard compliant web page styling. The frequently used CSS frameworks are: -

Bootstrap
Foundation
Semantic UI
Gumby
Ulkit
8) Why background and color are the separate properties if they should always be set together?
There are two reasons behind this:

It enhances the legibility of style sheets. The background property is a complex property in CSS, and if it is combined with color, the complexity will further increase.
Color is an inherited property while the background is not. So this can make confusion further.
9) What is Embedded Style Sheet?
An Embedded style sheet is a CSS style specification method used with HTML. You can embed the entire stylesheet in an HTML document by using the STYLE element. More details...

 <style>    
body {    
    background-color: linen;    
}    
h1 {    
    color: red;    
    margin-left: 80px;    
}     
</style>    
       
10) What are the advantages of Embedded Style Sheets?
You can create classes for use on multiple tag types in the document.
You can use selector and grouping methods to apply styles in complex situations.
No extra download is required to import the information.
11) What is a CSS selector?
It is a string that identifies the elements to which a particular declaration apply. It is also referred as a link between the HTML document and the style sheet. It is equivalent of HTML elements. There are several different types of selectors in CSS: -

CSS Element Selector
CSS Id Selector
CSS Class Selector
CSS Universal Selector
CSS Group Selector
More details...
12) Name some CSS style components.
Some CSS Style components are:

Selector
Property
Value
13) What is the use of CSS Opacity?
The CSS opacity property is used to specify the transparency of an element. In simple word, you can say that it specifies the clarity of the image. In technical terms, Opacity is defined as the degree to which light is allowed to travel through an object. For example:

<style>    
img.trans {    
    opacity: 0.4;    
    filter: alpha(opacity=40); /* For IE8 and earlier */    
}    
</style>   
14) Explain universal selector.
The universal selector matches the name of any of the element type instead of selecting elements of a specific type.

<style>    
* {    
   color: green;    
   font-size: 20px;    
}     
</style>    
    
15) Which command is used for the selection of all the elements of a paragraph?
The p[lang] command is used for selecting all the elements of a paragraph.

16) What is the use of % unit?
It is used for defining percentage values.

17) Name the property used to specify the background color of an element.
The background-color property is used to specify the background color of the element. For example:

<style>    
h2,p{    
    background-color: #b0d4de;    
}    
</style>  
   
18) Name the property for controlling the image repetition of the background.
The background-repeat property repeats the background image horizontally and vertically. Some images are repeated only horizontally or vertically.

<style>    
body {    
background-image: url("paper1.gif");    
margin-left:100px;    
}    
</style>  
   
19) Name the property for controlling the image position in the background.
The background-position property is used to define the initial position of the background image. By default, the background image is placed on the top-left of the webpage.


You can set the following positions:

center
top
bottom
left
right
background: white url('good-morning.jpg');  
background-repeat: no-repeat;  
background-attachment: fixed;  
background-position: center;   
20) Name the property for controlling the image scroll in the background.
The background-attachment property is used to specify if the background image is fixed or scroll with the rest of the page in the browser window. If you set fixed the background image, then the image not move during scrolling in the browser. Let's take an example with the fixed background image.

background: white url('bbb.gif');  
background-repeat: no-repeat;  
background-attachment: fixed;  
21) What is the use of ruleset?
The ruleset is used to identify that selectors can be attached with other selectors. It has two parts:


Selector - Selector indicates the HTML element you want to style.
Declaration Block - The declaration block can contain one or more declarations separated by a semicolon.
CSS syntax
22) What is the difference between class selectors and id selectors?
An overall block is given to class selector while id selectors take only a single element differing from other elements.

CSS Class Selector
<style>    
.center {    
    text-align: center;    
    color: blue;    
}    
</style>  
   
CSS Id Selector
<style>    
#para1 {    
    text-align: center;    
    color: blue;    
}    
</style>    
   
More details...

23) What are the advantages of External Style Sheets?
You can create classes for reusing it in many documents.
By using it, you can control the styles of multiple documents from one file.
In complex situations, you can use selectors and grouping methods to apply styles.
More details...
24) What is the difference between inline, embedded and external style sheets?
Inline: Inline Style Sheet is used to style only a small piece of code.

Syntax
<htmltag style="cssproperty1:value; cssproperty2:value;"> </htmltag>     
       
Embedded: Embedded style sheets are put between the <head>...</head> tags.

Syntax
<style>    
body {    
    background-color: linen;    
}    
h1 {    
    color: red;    
    margin-left: 80px;    
}     
</style>    
       
External: This is used to apply the style to all the pages within your website by changing just one style sheet.

Syntax
<head>    
<link rel="stylesheet" type="text/css" href="mystyle.css">    
</head>    
       
25) What is RWD?
RWD stands for Responsive Web Design. This technique is used to display the designed page perfectly on every screen size and device, for example, mobile, tablet, desktop and laptop. You don't need to create a different page for each device.

26) What are the benefits of CSS sprites?
If a web page has a large number of images that take a longer time to load because each image separately sends out an HTTP request. The concept of CSS sprites is used to reduce the loading time for a web page because it combines the various small images into one image. It reduces the number of HTTP requests and hence the loading time.

27) What is the difference between logical tags and physical tags?
Physical tags are referred to as presentational markup while logical tags are useless for appearances.
Physical tags are newer versions, on the other hand, logical tags are old and concentrate on content.
28) What is the CSS Box model and what are its elements?
The CSS box model is used to define the design and layout of elements of CSS.

The elements are:


Margin - It removes the area around the border. It is transparent.
Border - It represents the area around the padding
Padding - It removes the area around the content. It is transparent.
Content - It represents the content like text, images, etc.
CSS Box Model
29) What is the float property of CSS?
The CSS float property is used to move the image to the right or left along with the texts to be wrapped around it. It doesn't change the property of the elements used before it.

To understand its purpose and origin, let's take a look at its print display. In the print display, an image is set into the page such that text wraps around it as needed.

CSS Float Print Layout
Its web layout is also just similar to print layout.

CSS Float Web Layout
More details...
30) How to restore the default property value using CSS?
In short, there is no easy way to restore to default values to whatever a browser uses.

The closest option is to use the 'initial' property value, which restores the default CSS values, rather than the browser's default styles.

31) What is the purpose of the z-index and how is it used?
The z-index helps to specify the stack order of positioned elements that may overlap one another. The z-index default value is zero and can take on either a positive or negative number.

An element with a higher z-index is always stacked above than a lower index.

Z-Index can take the following values:

Auto: Sets the stack order equal to its parents.
Number: Orders the stack order.
Initial: Sets this property to its default value (0).
Inherit: Inherits this property from its parent element.
32) Explain the difference between visibility: hidden and display: none?
visibility: hidden hides the element, but it occupies space and affects the layout of the document.

 <!DOCTYPE html>  
<html>  
<head>  
<style>  
h1.vis {  
    visibility: visible;  
}  
  
h1.hid {  
    visibility: hidden;  
}  
</style>  
</head>  
<body>  
<h1 class="vis">It is visible</h1>  
<h1 class="hid">It is hidden</h1>  
  
<p>Note - Second heading is hidden, but it still occupy space.</p>  
</body>  
</html>  
       
display: none also hides the element but not occupy space. It will not affect the layout of the document.

<!DOCTYPE html>  
<html>  
<head>  
<style>  
h1.vis {  
    display: block;  
}  
  
h1.hid {  
     display: none;  
}  
</style>  
</head>  
<body>  
<h1 class="vis">It is visible</h1>  
<h1 class="hid">It is hidden</h1>  
  
<p>Note - Second heading is hidden and not occupy space.</p>  
</body>  
</html>  



Name some CSS frameworks. 
CSS frameworks are libraries that make web page styling easier. Some of them are Foundation, Bootstrap, Gumby, Ukit, Semantic UI, etc. 

2. What do you understand by the universal sector?
A universal selector is a selector that matches any element type's name instead of selecting elements of a particular type. 

Example: 

<style>    

* {    

   color: blue;    

   font-size: 10px;    

}     

</style>    

Become a Skilled Web Developer in Just 9 Months!
Caltech PGP Full Stack DevelopmentEXPLORE PROGRAMBecome a Skilled Web Developer in Just 9 Months!
3. Tell us about the use of the ruleset.
The ruleset is used for the identification of selectors, which can be attached with other selectors. The two parts of a ruleset are:

Declaration block: contains one or more semicolon-separated declarations
Sector: indicates the HTML element needed to be styled
4. What are the elements of the CSS Box Model?
The CSS box model defines the layout and design of CSS elements. The elements are content (like text and images, padding (the area around content), border (the area around padding), and margin (the area around the border). 

5. Differentiate between CSS3 and CSS2.
The main difference between CSS3 and CSS2 is that CSS divides different sections into modules and supports many browsers. It also contains new General Sibling Combinators responsible for matching similar elements. 

6. How can CSS be integrated into an HTML page?
There are three ways of integrating CSS into HTML: using style tags in the head section, using inline-styling, writing CSS in a separate file, and linking into the HTML page by the link tag. 

7. Explain a few advantages of CSS. 
With CSS, different documents can be controlled using a single site, styles can be grouped in complex situations using selectors and grouping methods, and multiple HTML elements can have classes. 

8. What is meant by RGB stream?
RGB represents colors in CSS. The three streams are namely Red, Green, and Blue. The intensity of colors is represented using numbers 0 to 256. This allows CSS to have a spectrum of visible colors. 

9. What was the purpose of developing CSS?
CSS was developed to define the visual appearances of websites. It allows developers to separate the structure and content of a website that was not possible before. 

10. What is the difference between a class and an ID?
Ans. Class is a way of using HTML elements for styling. They are not unique and have multiple elements. Whereas ID is unique and it can be assigned to a single element. 

Learn From The Best Mentors in the Industry!
Automation Testing Masters ProgramEXPLORE PROGRAMLearn From The Best Mentors in the Industry!
Intermediate CSS Interview Questions
In the next section, let us learn some intermediate level CSS interview questions!

1. Define z-index.
This is one of the most frequently asked CSS interview questions. Z-index is used to specify the stack order of elements that overlap each other. Its default value is zero and can take both negative and positive values. A higher z-index value is stacked above the lower index element. It takes the following values- auto, number, initial, and inherit. 

2. What are the benefits of CSS Sprites?
With CSS sprites, loading multiple images is not an issue. 

Blinking is not seen. 
Advanced downloading of assets does not take place until needed. 
3. How can you target h3 and h2 with the same styling?
Multiple elements can be targeted by separating with a comma:

h2, h3 {color: red;}

4. Name media types allowed by CSS.
The different media types allowed by CSS are: 

speech
audio
visual
tactile media
continuous or paged media
grip media or bitmap
interactive media
5. How can you use CSS to control image repetition?
The background-repeat property is used to control the image. Example:

h3 {

background-repeat: none;

 }

Create and Showcase Your Portfolio from Scratch!
Caltech PGP Full Stack DevelopmentEXPLORE PROGRAMCreate and Showcase Your Portfolio from Scratch!
6. Tell us about the property used for image scroll controlling?
The background-attachment property is used to set whether the background image is fixed or it scrolls with the rest of the page. Example for a fixed background-image:

body {

  background-image: url(‘url_of_image’);

  background-repeat: no-repeat;

  background-attachment: fixed;

}

7. Name some font-related CSS attributes. 
The font-related attributes are Font- style, variant, weight, family, size, etc. 

8. Define contextual selectors.
In CSS, contextual selectors allow developers to specify styles of different parts of the document. Styles can be assigned directly to specific HTML tags or create independent classes and assign tags to them. 

9. Explain responsive web design. 
Responsive Design is a web page creation approach that uses flexible images, flexible layouts, and CSS media queries. This design approach aims to build web pages that detect the orientation and screen size of the visitors so that the layout can be changed accordingly.  

10. Tell us about the general CSS nomenclature.
In CSS, the styling commands are written in value and property fashion. CSS includes a system terminator- semicolon. The entire style is wrapped in curly braces and attached to the selector. This creates a style sheet that can be applied to an HTML page.

11. What are the limitations of CSS?
CSS cannot always assure compatibility with every browser; you need to be cautious while choosing the style selector.
The parent selector tag is not available, thus you can’t select the parent selector tag.
Some selectors can lead to cross-browser issues due to their less browser-friendly behavior.
We cannot request a webpage through CSS.
12. How to include CSS in the webpage?
With the help of a link tag, you can include an external style sheet file as a CSS file into your HTML file.
You can add CSS styles included within your HTML page and write it in the stand-alone stylesheet form of CSS.
CSS can be included directly in the HTML tag by adding an inline style to HTML elements.
One can import an external stylesheet file as a new CSS file by using the @import rule. 
13. What are the different types of Selectors in CSS?
Universal Selector, Element type Selector, ID selector, Class selector, Descendant combinatory, Child Combinator, General Sibling Combinator, Adjacent sibling combinator, and Attribute selector.

Prepare Yourself to Answer All Questions!
Automation Testing Masters ProgramEXPLORE PROGRAMPrepare Yourself to Answer All Questions!
14. What is a CSS Preprocessor? What are Sass, Less, and Stylus? Why do people use them?
CSS preprocessor is a tool used to enhance the basic functionality and let us use the complex logical syntax such as variables, functions, mixins, and code nesting within vanilla CSS scripts themselves.

Sass (Syntactically Awesome Style Sheets) uses .sass extension. It is used for indentation; it doesn’t use semicolons or curly brackets.
Less (Leener Stylesheets) uses .less extension. It is easy to add to any JavaScript Project by using NPM or less.js file. Here, @ is used to define the variables. 
Stylus provides great flexibility in writing syntax. It is able to use native CSS as well as the exclusion of brackets, colons, and semicolons. There is no need to use @ or $ to define the variables.
People use SASS, LESS, and Stylus in order to extend the basic functionality of vanilla CSS.

15. What is VH/VW (viewport height/ viewport width) in CSS?
VH and VW are CSS units used to measure viewport height and viewport width respectively in percentage form in the responsive design techniques. E.g. If the height of the browser is 1000px, then VH is 1/100 of the height of the viewport that is 1000px*(1/100) = 10px, which is the height of the browser.  The same applies to VW (viewport width).

16. Difference between reset vs normalize CSS? How do they differ?
Reset CSS is used to remove all built-in styles in the browser such as paddings, margins, and font sizes, and can be reset using all the elements.
Normalize CSS is used to make all built-in styles in the browser consistent and correct bugs as per varying browsers.
17. What is the difference between inline, inline-block, and block?
Block Elements are <div> and <p>. They usually start on a new line and can take space for an entire row or width.
Inline elements are <a>, <span>, <strong>, and <img> tags. They don't start on a new line. However, they appear on the same line as the content and tags beside them.
Inline block elements have padding and margins and set height and width values. Though, they are similar to inline elements. 
18. Is it important to test the webpage in different browsers?
Yes, it is the most crucial thing or the most important trial to do when you design a webpage for the first time and make changes to it. Testing your website periodically in different browsers will help you make every webpage compatible with it as browsers have been going through many updates.

19. What are Pseudo classes?
Pseudo-classes are the type of pseudo-elements that don’t exist in a normal document tree. It allows selecting the regular elements under certain conditions especially when we try to hover over the link; the anchor tags are :link, :visited, :hover, :active, :focus

In this example, the color will be red on the anchor tag when it’s hovered.

/* mouse over link */

a:hover {

color: #FFOOFF;

}

20. How do you specify units in the CSS? What are the different ways to do it?
There are mainly four different units in the CSS that are px, em, pt, and percentage (%).

Px (Pixel) is used for fine-grained control and alignment and not cascade. To get it sharp, we can use 1px or multiple of px.
Em is used to maintain relative size and responsive fonts. 1em = 16px having also the same font size. It is advisable to set the font size to 10px in common practice.
Pt (point) is a fixed-size unit that is used in print. 1pt = 1/72 inch.
Percentage (%) is used to set the font size with respect to the font size of the body. Thus, it is necessary to set the reasonable font size of the body.
21. Does margin-top or margin-bottom have an effect on inline elements?
No, mMargin-top or margin-bottom does not have an effect on the inline elements.

22. What property is used for changing the font face?
The font-family property is used for changing the font face that is applied to the element in the DOM.

23. What are the differences between adaptive design and responsive design?
Adaptive Design:
Main focus is to develop a website in multiple fixed layout sizes.
Offers good control over the design to develop variation in screens.
It is very time-consuming and takes a lot of effort to build the best possible adaptive design as examining it will need to go for many options with respect to the realities of the end user.
There are six standard screen sizes for the appropriate layouts; they are 320px, 480px, 760px, 960px, 1200px, 1600px to design.
Responsive Design
Main focus is to show content with respect to browser space.
Offers less control over the design.
It takes less time to build the design and there is no screen size issue irrespective of content.
It uses CSS media queries to design the screen layouts with respect to specific devices and property changes in the screen.
Get All Your Questions Answered Here!
Caltech PGP Full Stack DevelopmentEXPLORE PROGRAMGet All Your Questions Answered Here!
24. How are the CSS selectors matched against the elements by the browser?
Initially, there is a filtration of elements in the DOM via browsers with respect to key selectors that are traversed until we get parents' elements to determine the matches. Then the browser works on finding all the span elements present in the DOM and traverses them to parent elements to check whether they are matched to paragraph p elements. At last, when the browser finds all matches as parents, the matching process will be stopped and there will be black color applied to the content.

25. How is the border-box different from the content box?
Border-box consists of properties such as content, padding, and the border with respect to height and width. However, Content-box is a default value property used for the box-sizing as well as it helps to add border and padding to give proper height and width to the box without having a border and padding properties.

26. How is opacity specified in CSS3?
Opacity is the measure of content transparency. It is measured in the range from 0 to 1. Value 1 means the content is completely opaque. It is not supportable in the internet browser. Also, the 60% of opacity is applicable in the div section where we need to apply the filter property (polyfill) to make it completely opaque.

27. What is cascading in CSS?
Cascading is defined as the process of style declaration and its weight that will help the browser in selecting the styling rules with respect to time.

28. When does DOM reflow occur?
DOM reflow occurs when you insert, move, update, remove, and animate the elements in the DOM as well as when you modify content on the page and change style.

29. Different Box Sizing Property?
Content-box, Padding-box and Border-box

30. How to center align a div inside another div?
A div inside another div A is center aligned with the help of aligning div property to content via HTML script and CSS to the element in the DOM.

31. What is the grid system?
The CSS grid system is a type of powerful layout of 2 dimensional systems with respect to columns and rows.

32. What are the different ways to hide the element using CSS?
display: none, visibility: hidden, position: absolute

33. What does the: root pseudo-class refer to?
The: root selector pseudo-class refers to the CSS selector level 3. It helps to target the highest-level parent element present in the DOM.

34. What does Accessibility (a11y) mean?
Accessibility is to make the system accessible in such a manner that the website should have the text-to-speech capability, for people with physical disabilities, designed with the help of software or hardware combinations.

35. How do I restore the default value of a property?
keyword “initial” is used to restore the default value of a property.

36. Difference between CSS grid vs flexbox?0
CSS Grid Layout is a two-dimensional system along with rows and columns. It is used for large-sized layouts.
Flexbox is a Grid layout with a one-dimensional system either within a row or a column. It is used for the components of an application.
37. How does Calc work?
Calc can be used to specify the result of the mathematical operation of two or more elements. For example to specify the width elements by the addition of two or more elements, we can write as

.foo {

Width: calc(100px+50px)

}

38. What do CSS Custom properties variables mean?
CSS Custom properties variables are defined for CSS variables as well as cascading variables with specific values that can be reused.

39. What is the difference between CSS variables and pre-processor (SASS, LESS, Stylus) variables?
CSS variables don’t need a pre-processor. It is cascaded, accessed, and manipulated in JavaScript.
Preprocessor variables don’t cascade.
40. What does * { box-sizing: border-box; } do? What are its advantages?
Box-sizing: border-box is used to provide the inner dimension for the elements in the document by providing padding and border with respect to the height and width of the content.

41. What does !important mean in CSS?
The style “!important” in the CSS has the highest precedence. Also, the cascaded property will be overridden with it.

42. What is progressive rendering? How do you implement progressive rendering on the website? What are its advantages?
Progressive rendering is the process of improving the performance of a webpage with respect to loading time in order to display the content speedily. The use of loading the lazy loading of the image with the help of Intersection Observer API via viewport. 

43. Does style1.css have to be downloaded and parsed before style2.css can be fetched?
No. The CSS file will be downloaded via browser in order to appear on the HTML page.

44. How to determine if the browser supports a certain feature?
@support tag in the CSS is used to scan and determine whether the browser supports a certain feature or not.

45. How does absolute positioning work?
Absolute positioning is used to place the element which is then removed from the HTML document from the normal workflow without creating any space for the element in the HTML page layout. The element can be positioned respectively to the closest positioned ancestor; otherwise, if the ancestor is not found, the element is placed with respect to the initial container box. The values provided to the top, right, left and bottom determine the final position of the element.

46. Does this property work overflow: hidden?
Overflow: the hidden property is used to specify the content’s clipping. We need to add scrollbars to the content area at the time of specified container size exceeding the content limit where the content gets enclosed. This makes the content invisible via clipping; also the overflow value will be hidden.

Advanced CSS Interview Questions
Here are some advanced CSS interview questions!

1. When should you use translate () instead of absolute positioning?
Translate is a CSS transform value. On changing opacity or transform, browser reflow or repaint is not triggered. Transform requires the browser to create a GPU layer for elements but using the CPU changes absolutes positioning properties. Translate () is more efficient and results in shorter paint times. On using translate (), element occupies original space, unlike in changing absolute positioning. 

2. Name different ways to position some aspects in CSS. 
The positioning property specifies the positioning method type. The five different position values are fixed, static, absolute, sticky, and relative. The elements are positioned using top, left, right, and bottom properties. These properties need to be set first, and they work depending on position value. 

3. What are mixins?
A mixin is similar to a function block of code returning a single value—mixin output lines of Sass code that directly compiles into CSS styles. At the same time, the function returns a value that becomes the value for a CSS property or something that can be passed to another mixin.

4. How can you optimize the webpage for prints?
Identify and control 'content areas' of the website. A website generally has a footer, header, sidebar, navbar, and main content area. Most of the work is done by controlling the content area. So, conquer print media without changing the website's integrity by using page breaks, creating a stylesheet for print, size your page for print, and avoid unnecessary HTML tables.  

5. What is meant by CSS working under the hood?
When a browser displays a document, it combines style information and document content. The document is processed in two stages:

Conversion of HTML and CSS into Document Object Model
DOM displays contents of browser
6. Differentiate between the use of ID selector and class selector.
ID Selector:

<style>

{

text-align: right;

color: blue;

}

</style>

CSS class Selector: 

<style>

.right {

text-align: right;

color: blue;

}

</style>

7. Tell us about CSS float property.
The float property of CSS positions an image to the right or left as needed, including text wrapping around it. All properties of elements used before it remain unchanged. 

8. What do you understand by pseudo-elements?
Pseudo-elements provide special effects to some selectors. CSS finds use in applying styles in HTML markups. If additional markup or style is not feasible for a document, the pseudo-elements help by allowing extra markup without interfering with the original document. 

9. Differentiate between logical and physical tags.
Logical tags mainly focus on content and are older as compared to physical ones. Logical ones do not find much usage in presentation and terms of aesthetics. At the same time, physical ones find application in presentation. 

10. How media types in CSS work?
The four types of media properties are print, speech, and screen. Example of using print-media type: 

@media print {

h2 {

background-color: blue;

 }

}

Learn 15+ In-Demand Tools and Skills!
Automation Testing Masters ProgramEXPLORE PROGRAMLearn 15+ In-Demand Tools and Skills!
Frequently Asked CSS Interview Questions
In this last section, we look at the most frequently asked CSS interview questions!

1. Tell us something about CSS3.
CSS3 is divided into modules and is supported by almost every browser. Many graphics-related characteristics are introduced in CSS3 like box-shadow, Border-radius, and flexbox. A user can create precise multiple background images using properties like background-position, background-repeat, and background-image styles. 

2. How is a CSS selector used?
With a CSS selector, we can choose the content we want to style to bridge between HTML files and style sheets. CSS selector syntax is "select" HTML elements created on their class, id, type, etc. 

3. What are CSS image scripts?
A group of images placed into one image is a CSS image script. It can reduce load time and project multiple images into a single web page. 

4. Explain CSS specificity.
CSS specificity is a rank or score that decides style declaration to be used to an element. ID selectors have high specificity, while universal selector * has low specificity. The four CSS categories that authorize the selector's specificity level are IDs, inline style, elements/pseudo-elements, and classes and attributes. 

5. Define gradients in CSS. 
A property of CSS that allows displaying smooth transformation between two or more specified colors. The types of gradients are linear and radial. 

6. What are the properties of flexbox?
The properties of flexbox are flex-direction, wrap, flow, content, and align-items, and content. 

7. Tell us about the use of the CSS Box Model.
The CSS Box model is a box binding HTML element that includes padding, border, margin, and the actual content. With the box model, we get the authority to add a border all around elements and define space between elements. 

Learn from the Best in the Industry!
Caltech PGP Full Stack DevelopmentEXPLORE PROGRAMLearn from the Best in the Industry!
8. What are the position states in CSS?
The four-position states in CSS are relative, static, absolute, and fixed. The default position state is static. 

9. Differentiate between absolute and relative in CSS. 
The main difference is that relative is used for the same tag in CSS. If we write right:20 px, then padding shifts 20 px in the right. Whereas absolute is relative to the non-static parent, i.e., if we write right:20 px, the result will be 20 px far from the right edge of the parent element.  

10. What is common between class and ID?
Both class and ID are used in HTML to assign a value from CSS. The ID is used as an element, whereas the class is used as a block. 